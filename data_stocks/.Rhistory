library(quantmod)
library(tidyquant)
library(tidyverse)
library(dplyr)
library(zoo)
library(httr)
path <- getwd()
setwd(file.path(getwd(), "data_stocks"))
st <- read.csv("final_data.csv")
head(st)
sum(is.na(st))
library(DepthProc)
library(fda)
library(fda.usc)
### B-splines
st <- as.matrix(st)
day <- c(1:756)
nrow(st)
# Create a grid for lambda and number of basis
l <- c(0 ,2^seq(-9, 9, len = 40))
nb <- seq(7, 40, by = 2)
time_points <- 1:756
# Create functional ojects with argumen values
fdata_obj <- fdata(t(st), argvals = time_points)
# Smooth with B-splines
out0 <- optim.basis(fdata_obj, lambda = l, numbasis = nb, type.basis = "bspline")
sum((fdata_obj$data - out0$fdata.est)^2)
basis <- create.bspline.basis(c(1,756),nbasis= out0$numbasis.opt, norder = 4)
basis <- create.bspline.basis(c(1,776),nbasis= out0$numbasis.opt, norder = 4)
tD3fdPar = fdPar(basis,Lfdobj=int2Lfd(2),lambda=out0$lambda.opt)
smooth <- smooth.basis(day,st,tD3fdPar)
nharm = 4
pcalist = pca.fd(smooth$fd, nharm, centerfns = TRUE)
plot(pcalist)
fd.pca1.list <- list()
fd.pca2.list <- list()
fd.pca3.list <- list()
fd.pca4.list <- list()
for(i in 1:5) {
fd.pca1.list[[i]] <- mean.fd(smooth$fd) +
pcalist$scores[i,1]*pcalist$harmonics[1]
fd.pca2.list[[i]] <- mean.fd(smooth$fd) +
pcalist$scores[i,1]*pcalist$harmonics[1] +
pcalist$scores[i,2]*pcalist$harmonics[2]
fd.pca3.list[[i]]<- mean.fd(smooth$fd) +
pcalist$scores[i,1]*pcalist$harmonics[1] +
pcalist$scores[i,2]*pcalist$harmonics[2] +
pcalist$scores[i,3]*pcalist$harmonics[3]
fd.pca4.list[[i]]<- mean.fd(smooth$fd) +
pcalist$scores[i,1]*pcalist$harmonics[1] +
pcalist$scores[i,2]*pcalist$harmonics[2] +
pcalist$scores[i,3]*pcalist$harmonics[3] +
pcalist$scores[i,4]*pcalist$harmonics[4]
}
opar <- par(mfrow=c(2,2), ask = TRUE)
for(i in 1:5) {
plot(fd.pca1.list[[i]], ylim=c(-1, 1), ylab = "1 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca2.list[[i]], ylim=c(-1, 1), ylab = "2 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca3.list[[i]], ylim=c(-1, 1), ylab = "3 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca4.list[[i]], ylim=c(-1, 1), ylab = "4 PC")
lines(smooth$fd[i], col = 2)
}
plot(fd.pca2.list[[i]], ylim=c(-1, 1), ylab = "2 PC")
plot(fd.pca3.list[[i]], ylim=c(-1, 1), ylab = "3 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca4.list[[i]], ylim=c(-1, 1), ylab = "4 PC")
lines(smooth$fd[i], col = 2)
}
opar <- par(mfrow=c(2,2), ask = TRUE)
for(i in 1:5) {
plot(fd.pca1.list[[i]], ylim=c(-1, 1), ylab = "1 PC")
lines(smooth$fd[i], col = 2)
par(opar)
dev.off()
opar <- par(mfrow=c(2,2), ask = TRUE)
for(i in 1:5) {
plot(fd.pca1.list[[i]], ylim=c(-1, 1), ylab = "1 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca2.list[[i]], ylim=c(-1, 1), ylab = "2 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca3.list[[i]], ylim=c(-1, 1), ylab = "3 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca4.list[[i]], ylim=c(-1, 1), ylab = "4 PC")
lines(smooth$fd[i], col = 2)
}
for(i in 1:5) {
plot(fd.pca1.list[[i]], ylim=c(-1, 1), ylab = "1 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca2.list[[i]], ylim=c(-1, 1), ylab = "2 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca3.list[[i]], ylim=c(-1, 1), ylab = "3 PC")
lines(smooth$fd[i], col = 2)
plot(fd.pca4.list[[i]], ylim=c(-1, 1), ylab = "4 PC")
lines(smooth$fd[i], col = 2)
}
dev.off()
varmx <- varmx.pca.fd(pcalist)
plot(varmx)
plot(varmx$harmonics)
plotscores(varmx, loc = 5)
fd.vrm1.list <- list()
fd.vrm2.list <- list()
fd.vrm3.list <- list()
fd.vrm4.list <- list()
for(i in 1:5) {
fd.vrm1.list[[i]] <- mean.fd(smooth$fd) +
varmx$scores[i,1]*varmx$harmonics[1]
fd.vrm2.list[[i]] <- mean.fd(smooth$fd) +
varmx$scores[i,1]*varmx$harmonics[1] +
varmx$scores[i,2]*varmx$harmonics[2]
fd.vrm3.list[[i]]<- mean.fd(smooth$fd) +
varmx$scores[i,1]*varmx$harmonics[1] +
varmx$scores[i,2]*varmx$harmonics[2] +
varmx$scores[i,3]*varmx$harmonics[3]
fd.vrm4.list[[i]]<- mean.fd(smooth$fd) +
varmx$scores[i,1]*varmx$harmonics[1] +
varmx$scores[i,2]*varmx$harmonics[2] +
varmx$scores[i,3]*varmx$harmonics[3] +
varmx$scores[i,4]*varmx$harmonics[4]
}
opar <- par(mfrow=c(2,2), ask = TRUE)
for(i in 1:5) {
plot(fd.vrm1.list[[i]], ylim=c(-1, 1), ylab = "1 PC")
lines(smooth$fd[i], col = 2)
plot(fd.vrm2.list[[i]], ylim=c(-1, 1), ylab = "2 PC")
lines(smooth$fd[i], col = 2)
plot(fd.vrm3.list[[i]], ylim=c(-1, 1), ylab = "3 PC")
lines(smooth$fd[i], col = 2)
plot(fd.vrm4.list[[i]], ylim=c(-1, 1), ylab = "4 PC")
lines(smooth$fd[i], col = 2)
}
basis
dev.off()
library(fda)
